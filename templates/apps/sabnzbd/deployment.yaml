{{- $service := .Values.services.sabnzbd }}
{{- if $service.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "homeserver.common.names.name" ( dict "service" $service ) | quote }}
  namespace: {{ include "homeserver.common.names.namespace" $ | quote }}
  labels: {{- include "homeserver.common.labels.standard" ( dict "service" $service "context" $ ) | nindent 4 }}
  annotations: {{- include "homeserver.common.annotations.standard" ( dict "service" $service "context" $ ) | nindent 4 }}
spec:
  revisionHistoryLimit: 3
  replicas: {{ $service.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels: {{- include "homeserver.common.labels.matchLabels" ( dict "service" $service "context" $ ) | nindent 6 }}
  template:
    metadata:
      labels: {{- include "homeserver.common.labels.standard" ( dict "service" $service "context" $ ) | nindent 8 }}
      annotations: {{- include "homeserver.common.annotations.standard" ( dict "service" $service "context" $ ) | nindent 8 }}
        checksum/config: {{ include "homeserver.common.utils.checksumTemplate" ( dict "path" "/apps/sabnzbd/configmap.yaml" "context" $ ) }}
    spec:
      automountServiceAccountToken: {{ include "homeserver.common.pod.automountServiceAccountToken" (dict "service" $service "context" $) }}
      enableServiceLinks: {{ include "homeserver.common.pod.enableServiceLinks" (dict "service" $service "context" $) }}
      priorityClassName: {{ include "homeserver.common.pod.priorityClass" (dict "service" $service "context" $) | quote }}
      affinity: {{- include "homeserver.common.pod.affinity" (dict "service" $service "context" $) | nindent 8 }}
      tolerations: {{- include "homeserver.common.pod.tolerations" (dict "service" $service "context" $) | nindent 8 }}
      securityContext: {{- include "homeserver.common.pod.securityContext" (dict "service" $service "context" $) | nindent 8 }}
      initContainers: {{- include "homeserver.common.pod.initContainers" (dict "service" $service "context" $) | nindent 8 }}
        - name: set-host-whitelist
          image: {{ include "homeserver.common.initContainer.image.utility" . | quote }}
          imagePullPolicy: IfNotPresent
          securityContext: {{- include "homeserver.common.securityContext.strict" . | nindent 12 }}
          command:
            - /bin/sh
            - -ec
            - sed -i "s/host_whitelist\s*=.*/host_whitelist = ${HOST_WHITELIST}/" /config/sabnzbd.ini
          env: {{- include "homeserver.common.container.env" (dict "context" $) | nindent 12 }}
            - name: HOST_WHITELIST
              value: {{ include "homeserver.common.utils.allowedHosts" ( dict "service" $service "context" $ ) | quote }}
          resources: {{- include "homeserver.common.resources.preset" (dict "type" "nano") | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: /config
        - name: add-scripts
          image: {{ include "homeserver.common.initContainer.image.utility" . | quote }}
          imagePullPolicy: IfNotPresent
          securityContext: {{- include "homeserver.common.securityContext.strict" . | nindent 12 }}
          command:
            - /bin/sh
            - -ec
            - |-
                mkdir -p /config/scripts \
                  && cp -rfL /tmp/scripts/* /config/scripts/ \
                  && chmod -R a=,ug+rx,u+w /config/scripts
          resources: {{- include "homeserver.common.resources.preset" (dict "type" "nano") | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: /config
            - name: scripts
              mountPath: /tmp/scripts
      containers:
        - name: sabnzbd
          image: {{ printf "%s:%s" $service.image.repository $service.image.tag | quote }}
          imagePullPolicy: {{ $service.image.pullPolicy }}
          securityContext: {{- include "homeserver.common.container.securityContext" (dict "service" $service "context" $) | nindent 12 }}
          envFrom: {{- include "homeserver.common.container.envFrom" (dict "service" $service "context" $) | nindent 12 }}
          env: {{- include "homeserver.common.container.env" (dict "service" $service "context" $) | nindent 12 }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          resources: {{- include "homeserver.common.container.resources" (dict "service" $service "context" $) | nindent 12 }}
          livenessProbe: {{- include "homeserver.common.container.livenessProbe.tcpSocket" (dict "service" $service "port" "8080" "context" $) | nindent 12 }}
          readinessProbe: {{- include "homeserver.common.container.readinessProbe.tcpSocket" (dict "service" $service "port" "8080" "context" $) | nindent 12 }}
          startupProbe: {{- include "homeserver.common.container.startupProbe.tcpSocket" (dict "service" $service "port" "8080" "context" $) | nindent 12 }}
          volumeMounts: {{- include "homeserver.common.container.volumeMounts" (dict "service" $service "context" $) | nindent 12 }}
            - name: config
              mountPath: /config
            - name: data
              mountPath: {{ $service.persistence.data | quote }}
      volumes: {{- include "homeserver.common.pod.volumes" (dict "service" $service "context" $) | nindent 8 }}
        - name: scripts
          configMap:
            name: {{ include "homeserver.common.names.name" ( dict "service" $service ) | quote }}
        - name: config
          hostPath:
            path: {{ $service.persistence.config | quote }}
            type: Directory
        - name: data
          hostPath:
            path: {{ $service.persistence.data | quote }}
            type: Directory
{{- end }}
