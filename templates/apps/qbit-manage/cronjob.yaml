{{- if .Values.services.qbit_manage.enabled }}
{{- $service := .Values.services.qbit_manage }}
{{- $kind := "app" }}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "homeserver.common.names.name" ( dict "service" $service "kind" $kind ) | quote }}
  namespace: {{ include "homeserver.common.names.namespace" . | quote }}
  labels: {{- include "homeserver.common.labels.standard" ( dict "service" $service "kind" $kind "context" $ ) | nindent 4 }}
  annotations: {{- include "homeserver.common.annotations.standard" ( dict "service" $service "kind" $kind "context" $ ) | nindent 4 }}
spec:
  schedule: {{ $service.scheduleCron | quote }}
  timeZone: {{ required "A valid timezone required!" .Values.host.tz }}
  successfulJobsHistoryLimit: 3
  concurrencyPolicy: Replace
  jobTemplate:
    metadata:
      labels: {{- include "homeserver.common.labels.standard" ( dict "service" $service "kind" $kind "context" $ ) | nindent 8 }}
      annotations: {{- include "homeserver.common.annotations.standard" ( dict "service" $service "kind" $kind "context" $ ) | nindent 8 }}
    spec:
      template:
        metadata:
          labels: {{- include "homeserver.common.labels.standard" ( dict "service" $service "kind" $kind "context" $ ) | nindent 12 }}
          annotations: {{- include "homeserver.common.annotations.standard" ( dict "service" $service "kind" $kind "context" $ ) | nindent 12 }}
            checksum/config: {{ include "homeserver.common.utils.checksumTemplate" ( dict "path" "/apps/qbit-manage/configmap.yaml" "context" $ ) }}
        spec:
          restartPolicy: OnFailure
          automountServiceAccountToken: {{ include "homeserver.common.pod.automountServiceAccountToken" (dict "service" $service "kind" $kind "context" $) }}
          enableServiceLinks: {{ include "homeserver.common.pod.enableServiceLinks" (dict "service" $service "kind" $kind "context" $) }}
          priorityClassName: {{ include "homeserver.common.pod.priorityClass" (dict "service" $service "kind" $kind "context" $) | quote }}
          securityContext: {{- include "homeserver.common.pod.securityContext" (dict "service" $service "kind" $kind "context" $) | nindent 12 }}
          initContainers: {{- include "homeserver.common.pod.initContainers" (dict "service" $service "kind" $kind "context" $) | nindent 12 }}
            - name: init-config
              image: {{ include "homeserver.common.initContainer.image.utility" . | quote }}
              imagePullPolicy: IfNotPresent
              securityContext: {{- include "homeserver.common.container.securityContext" (dict "service" $service "kind" $kind "context" $) | nindent 16 }}
              command:
                - /bin/sh
                - -ec
                - |-
                  cp -fL /tmp/config/config.yml /config/config.yml
              resources: {{- include "homeserver.common.resources.preset" (dict "type" "nano") | nindent 16 }}
              volumeMounts:
                - name: config
                  mountPath: /config
                - name: qbit-manage-config
                  mountPath: /tmp/config/config.yml
                  subPath: config.yml
          containers:
            - name: qbit-manage
              image: {{ printf "%s:%s" $service.image.repository $service.image.tag | quote }}
              imagePullPolicy: {{ $service.image.pullPolicy }}
              securityContext: {{- include "homeserver.common.container.securityContext" (dict "service" $service "kind" $kind "context" $) | nindent 16 }}
              command: [ "python3", "qbit_manage.py" ]
              args: [ "--run", "--config-file", "/config/config.yml" ]
              envFrom: {{- include "homeserver.common.container.envFrom" (dict "service" $service "kind" $kind "context" $) | nindent 16 }}
              env: {{- include "homeserver.common.container.env" (dict "service" $service "kind" $kind "context" $) | nindent 16 }}
              resources: {{- include "homeserver.common.container.resources" (dict "service" $service "kind" $kind "context" $) | nindent 16 }}
              volumeMounts: {{- include "homeserver.common.container.volumeMounts" (dict "service" $service "kind" $kind "context" $) | nindent 16 }}
                - name: config
                  mountPath: /config
                - name: torrents
                  mountPath: {{ .Values.services.qbittorrent.persistence.data | quote }}
          volumes: {{- include "homeserver.common.pod.volumes" (dict "service" $service "kind" $kind "context" $) | nindent 12 }}
            - name: qbit-manage-config
              configMap:
                name: {{ include "homeserver.common.names.name" ( dict "service" $service "kind" $kind ) | quote }}
            - name: config
              hostPath:
                path: {{ $service.persistence.config | quote }}
                type: Directory
            - name: torrents
              hostPath:
                path: {{ .Values.services.qbittorrent.persistence.data | quote }}
                type: Directory
{{- end }}
