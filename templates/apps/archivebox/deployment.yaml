{{- $service := .Values.services.archivebox }}
{{- if $service.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "homeserver.common.names.name" ( dict "service" $service ) | quote }}
  namespace: {{ include "homeserver.common.names.namespace" $ | quote }}
  labels: {{- include "homeserver.common.labels.standard" ( dict "service" $service "context" $ ) | nindent 4 }}
  annotations: {{- include "homeserver.common.annotations.standard" ( dict "service" $service "context" $ ) | nindent 4 }}
spec:
  revisionHistoryLimit: 3
  replicas: {{ $service.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels: {{- include "homeserver.common.labels.matchLabels" ( dict "service" $service "context" $ ) | nindent 6 }}
  template:
    metadata:
      labels: {{- include "homeserver.common.labels.standard" ( dict "service" $service "context" $ ) | nindent 8 }}
      annotations: {{- include "homeserver.common.annotations.standard" ( dict "service" $service "context" $ ) | nindent 8 }}
    spec:
      automountServiceAccountToken: {{ include "homeserver.common.pod.automountServiceAccountToken" (dict "service" $service "context" $) }}
      enableServiceLinks: {{ include "homeserver.common.pod.enableServiceLinks" (dict "service" $service "context" $) }}
      priorityClassName: {{ include "homeserver.common.pod.priorityClass" (dict "service" $service "context" $) | quote }}
      affinity: {{- include "homeserver.common.pod.affinity" (dict "service" $service "context" $) | nindent 8 }}
      tolerations: {{- include "homeserver.common.pod.tolerations" (dict "service" $service "context" $) | nindent 8 }}
      securityContext: {{- include "homeserver.common.pod.securityContext" (dict "service" $service "context" $) | nindent 8 }}
      initContainers: {{- include "homeserver.common.pod.initContainers" (dict "service" $service "context" $) | nindent 8 }}
      containers:
        - name: archivebox
          image: {{ printf "%s:%s" $service.image.repository $service.image.tag | quote }}
          imagePullPolicy: {{ $service.image.pullPolicy }}
          securityContext: {{- include "homeserver.common.container.securityContext" (dict "service" $service "context" $) | nindent 12 }}
          envFrom: {{- include "homeserver.common.container.envFrom" (dict "service" $service "context" $) | nindent 12 }}
          env: {{- include "homeserver.common.container.env" (dict "service" $service "context" $) | nindent 12 }}
            - name: PUID
              value: {{ required "A valid UID required!" .Values.host.uid | quote }}
            - name: PGID
              value: {{ required "A valid GID required!" .Values.host.gid | quote }}
            - name: ADMIN_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ $service.adminCredentials.secretName | quote }}
                  key: {{ $service.adminCredentials.usernameKey | quote }}
                  optional: false
            - name: ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ $service.adminCredentials.secretName | quote }}
                  key: {{ $service.adminCredentials.passwordKey | quote }}
                  optional: false
            - name: CSRF_TRUSTED_ORIGINS
              value: {{ include "homeserver.common.utils.csrfTrustedOrigins" ( dict "service" $service "context" $ ) | quote }}
            - name: ALLOWED_HOSTS
              value: {{ include "homeserver.common.utils.allowedHosts" ( dict "service" $service "context" $ ) | quote }}
            - name: REVERSE_PROXY_USER_HEADER
              value: "X-authentik-email"
            - name: REVERSE_PROXY_WHITELIST
              value: "10.42.0.0/15"
            - name: PUBLIC_INDEX
              value: "false"
            - name: PUBLIC_SNAPSHOTS
              value: "false"
            - name: PUBLIC_ADD_VIEW
              value: "false"
            - name: SAVE_TITLE
              value: {{ $service.saveTitle | quote }}
            - name: SAVE_FAVICON
              value: {{ $service.saveFavicon | quote }}
            - name: SAVE_WGET
              value: {{ $service.saveWget | quote }}
            - name: SAVE_WARC
              value: {{ $service.saveWarc | quote }}
            - name: SAVE_PDF
              value: {{ $service.savePdf | quote }}
            - name: SAVE_SCREENSHOT
              value: {{ $service.saveScreenshot | quote }}
            - name: SAVE_DOM
              value: {{ $service.saveDom | quote }}
            - name: SAVE_SINGLEFILE
              value: {{ $service.saveSinglefile | quote }}
            - name: SAVE_READABILITY
              value: {{ $service.saveReadability | quote }}
            - name: SAVE_MERCURY
              value: {{ $service.saveMercury | quote }}
            - name: SAVE_GIT
              value: {{ $service.saveGit | quote }}
            - name: SAVE_MEDIA
              value: {{ $service.saveMedia | quote }}
            - name: SAVE_ARCHIVE_DOT_ORG
              value: {{ $service.saveArchiveDotOrg | quote }}
            - name: MEDIA_MAX_SIZE
              value: {{ $service.mediaMaxSize | quote }}
            - name: TIMEOUT
              value: {{ $service.timeout | quote }}
            - name: CHECK_SSL_VALIDITY
              value: "true"
            - name: WGET_USER_AGENT
              value: {{ $service.userAgent | quote }}
            - name: CURL_USER_AGENT
              value: {{ $service.userAgent | quote }}
            - name: CHROME_USER_AGENT
              value: {{ $service.userAgent | quote }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          resources: {{- include "homeserver.common.container.resources" (dict "service" $service "context" $) | nindent 12 }}
          livenessProbe: {{- include "homeserver.common.container.livenessProbe.httpGet" (dict "service" $service "path" "/health" "context" $) | nindent 12 }}
          readinessProbe: {{- include "homeserver.common.container.readinessProbe.httpGet" (dict "service" $service "path" "/health" "context" $) | nindent 12 }}
          startupProbe: {{- include "homeserver.common.container.startupProbe.httpGet" (dict "service" $service "path" "/health" "context" $) | nindent 12 }}
          volumeMounts: {{- include "homeserver.common.container.volumeMounts" (dict "service" $service "context" $) | nindent 12 }}
            - name: data
              mountPath: /data
      volumes: {{- include "homeserver.common.pod.volumes" (dict "service" $service "context" $) | nindent 8 }}
        - name: data
          hostPath:
            path: {{ $service.persistence.data | quote }}
            type: Directory
{{- end }}
