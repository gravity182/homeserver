{{- if .Values.housekeeping.mediaCleanup.enabled }}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: media-cleanup-cronjob
  namespace: {{ include "homeserver.common.names.namespace" . | quote }}
  labels: {{- include "homeserver.common.labels.standard" ( dict "context" $ ) | nindent 4 }}
  annotations: {{- include "homeserver.common.annotations.standard" ( dict "context" $ ) | nindent 4 }}
spec:
  schedule: {{ .Values.housekeeping.mediaCleanup.scheduleCron | quote }}
  timeZone: {{ required "A valid timezone required!" .Values.host.tz }}
  successfulJobsHistoryLimit: 3
  concurrencyPolicy: Replace
  jobTemplate:
    metadata:
      labels: {{- include "homeserver.common.labels.standard" ( dict "context" $ ) | nindent 8 }}
      annotations: {{- include "homeserver.common.annotations.standard" ( dict "context" $ ) | nindent 8 }}
    spec:
      template:
        metadata:
          labels: {{- include "homeserver.common.labels.standard" ( dict "context" $ ) | nindent 12 }}
          annotations: {{- include "homeserver.common.annotations.standard" ( dict "context" $ ) | nindent 12 }}
        spec:
          restartPolicy: OnFailure
          containers:
            - name: cleanup
              image: python:3.12-alpine
              imagePullPolicy: IfNotPresent
              command:
                - python
                - /scripts/cleanup.py
              env:
                - name: MEDIA_ROOT_DIRS
                  value: {{ .Values.housekeeping.mediaCleanup.paths | toJson | quote }}
                - name: METADATA_PATTERNS
                  value: {{ .Values.housekeeping.mediaCleanup.metadataFileGlobs | toJson | quote }}
                - name: DRY_RUN
                  value: {{ .Values.housekeeping.mediaCleanup.dryRun | default false | quote }}
              securityContext: {{- include "homeserver.common.securityContext.strict" . | nindent 16 }}
              resources: {{- include "common.resources.preset" (dict "type" "micro") | nindent 16 }}
              volumeMounts: {{- include "homeserver.common.container.volumeMounts" (dict "context" $) | nindent 16 }}
                - name: cleanup-script
                  mountPath: /scripts
                {{- range $index, $path := .Values.housekeeping.mediaCleanup.paths }}
                - name: media-path-{{ $index }}
                  mountPath: {{ $path.path | quote }}
                {{- end }}
          volumes: {{- include "homeserver.common.pod.volumes" (dict "context" $) | nindent 12 }}
            - name: cleanup-script
              configMap:
                name: media-cleanup-script
            {{- range $index, $path := .Values.housekeeping.mediaCleanup.paths }}
            - name: media-path-{{ $index }}
              hostPath:
                path: {{ $path.path | quote }}
                type: Directory
            {{- end }}
{{- end }}
