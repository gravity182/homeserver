---
{{- if (or .Values.services.radarr.enabled .Values.services.sonarr.enabled .Values.services.lidarr.enabled .Values.services.whisparr.enabled .Values.services.bazarr.enabled .Values.services.autobrr.enabled .Values.services.prowlarr.enabled) }}
- Arr Stack:
      {{- if .Values.services.radarr.enabled }}
      - Radarr:
            icon: sh-radarr
            href: {{ include "homeserver.common.utils.ingressUrl" ( dict "service" .Values.services.radarr "context" $ ) | quote }}
            siteMonitor: {{ include "homeserver.common.utils.serviceUrl" ( dict "service" .Values.services.radarr "context" $ ) | quote }}
            description: Movies management
            widget:
                type: radarr
                url: {{ include "homeserver.common.utils.serviceUrl" ( dict "service" .Values.services.radarr "context" $ ) | quote }}
                key: "{{`{{HOMEPAGE_VAR_RADARR_API_KEY}}`}}"
      {{- end }}
      {{- if .Values.services.sonarr.enabled }}
      - Sonarr:
            icon: sh-sonarr
            href: {{ include "homeserver.common.utils.ingressUrl" ( dict "service" .Values.services.sonarr "context" $ ) | quote }}
            siteMonitor: {{ include "homeserver.common.utils.serviceUrl" ( dict "service" .Values.services.sonarr "context" $ ) | quote }}
            description: Series management
            widget:
                type: sonarr
                url: {{ include "homeserver.common.utils.serviceUrl" ( dict "service" .Values.services.sonarr "context" $ ) | quote }}
                key: "{{`{{HOMEPAGE_VAR_SONARR_API_KEY}}`}}"
      {{- end }}
      {{- if .Values.services.lidarr.enabled }}
      - Lidarr:
            icon: sh-lidarr
            href: {{ include "homeserver.common.utils.ingressUrl" ( dict "service" .Values.services.lidarr "context" $ ) | quote }}
            siteMonitor: {{ include "homeserver.common.utils.serviceUrl" ( dict "service" .Values.services.lidarr "context" $ ) | quote }}
            description: Music management
            widget:
                type: lidarr
                url: {{ include "homeserver.common.utils.serviceUrl" ( dict "service" .Values.services.lidarr "context" $ ) | quote }}
                key: "{{`{{HOMEPAGE_VAR_LIDARR_API_KEY}}`}}"
      {{- end }}
      {{- if .Values.services.whisparr.enabled }}
      - Whisparr:
            icon: sh-whisparr
            href: {{ include "homeserver.common.utils.ingressUrl" ( dict "service" .Values.services.whisparr "context" $ ) | quote }}
            siteMonitor: {{ include "homeserver.common.utils.serviceUrl" ( dict "service" .Values.services.whisparr "context" $ ) | quote }}
            description: Adult videos management
      {{- end }}
      {{- if .Values.services.bazarr.enabled }}
      - Bazarr:
            icon: sh-bazarr
            href: {{ include "homeserver.common.utils.ingressUrl" ( dict "service" .Values.services.bazarr "context" $ ) | quote }}
            siteMonitor: {{ include "homeserver.common.utils.serviceUrl" ( dict "service" .Values.services.bazarr "context" $ ) | quote }}
            description: Subtitles management
            widget:
                type: bazarr
                url: {{ include "homeserver.common.utils.serviceUrl" ( dict "service" .Values.services.bazarr "context" $ ) | quote }}
                key: "{{`{{HOMEPAGE_VAR_BAZARR_API_KEY}}`}}"
      {{- end }}
      {{- if .Values.services.autobrr.enabled }}
      - Autobrr:
            icon: sh-autobrr
            href: {{ include "homeserver.common.utils.ingressUrl" ( dict "service" .Values.services.autobrr "context" $ ) | quote }}
            siteMonitor: {{ include "homeserver.common.utils.serviceUrl" ( dict "service" .Values.services.autobrr "context" $ ) | quote }}
            description: Download automation
            widget:
                type: autobrr
                url: {{ include "homeserver.common.utils.serviceUrl" ( dict "service" .Values.services.autobrr "context" $ ) | quote }}
                key: "{{`{{HOMEPAGE_VAR_AUTOBRR_API_KEY}}`}}"
      {{- end }}
      {{- if .Values.services.prowlarr.enabled }}
      - Prowlarr:
            icon: sh-prowlarr
            href: {{ include "homeserver.common.utils.ingressUrl" ( dict "service" .Values.services.prowlarr "context" $ ) | quote }}
            siteMonitor: {{ include "homeserver.common.utils.serviceUrl" ( dict "service" .Values.services.prowlarr "context" $ ) | quote }}
            description: Indexers management
            widget:
                type: prowlarr
                url: {{ include "homeserver.common.utils.serviceUrl" ( dict "service" .Values.services.prowlarr "context" $ ) | quote }}
                key: "{{`{{HOMEPAGE_VAR_PROWLARR_API_KEY}}`}}"
      {{- end }}
{{- end }}
{{- if (or .Values.services.qbittorrent.enabled .Values.services.sabnzbd.enabled .Values.services.pinchflat.enabled) }}
- Downloaders:
      {{- if .Values.services.qbittorrent.enabled }}
      - qBittorrent:
            icon: sh-qbittorrent
            href: {{ include "homeserver.common.utils.ingressUrl" ( dict "service" .Values.services.qbittorrent "context" $ ) | quote }}
            siteMonitor: {{ include "homeserver.common.utils.serviceUrl" ( dict "service" .Values.services.qbittorrent "context" $ ) | quote }}
            description: Torrent downloader
            widget:
                type: qbittorrent
                url: {{ include "homeserver.common.utils.serviceUrl" ( dict "service" .Values.services.qbittorrent "context" $ ) | quote }}
                fields: ["download", "upload"]
      {{- end }}
      {{- if .Values.services.sabnzbd.enabled }}
      - SABnzbd:
            icon: sh-sabnzbd
            href: {{ include "homeserver.common.utils.ingressUrl" ( dict "service" .Values.services.sabnzbd "context" $ ) | quote }}
            siteMonitor: {{ include "homeserver.common.utils.serviceUrl" ( dict "service" .Values.services.sabnzbd "context" $ ) | quote }}
            description: Usenet downloader
            widget:
                type: sabnzbd
                url: {{ include "homeserver.common.utils.serviceUrl" ( dict "service" .Values.services.sabnzbd "context" $ ) | quote }}
                key: "{{`{{HOMEPAGE_VAR_SABNZBD_API_KEY}}`}}"
      {{- end }}
      {{- if .Values.services.pinchflat.enabled }}
      - Pinchflat:
            icon: sh-pinchflat
            href: {{ include "homeserver.common.utils.ingressUrl" ( dict "service" .Values.services.pinchflat "context" $ ) | quote }}
            siteMonitor: {{ include "homeserver.common.utils.serviceUrl" ( dict "service" .Values.services.pinchflat "context" $ ) | quote }}
            description: YouTube downloader
      {{- end }}
{{- end }}
{{- if (or .Values.services.jellyseerr.enabled .Values.services.plex.enabled .Values.services.jellyfin.enabled .Values.services.stash.enabled) }}
- Media:
      {{- if .Values.services.jellyseerr.enabled }}
      - Jellyseerr:
            icon: sh-jellyseerr
            href: {{ include "homeserver.common.utils.ingressUrl" ( dict "service" .Values.services.jellyseerr "context" $ ) | quote }}
            siteMonitor: {{ include "homeserver.common.utils.serviceUrl" ( dict "service" .Values.services.jellyseerr "context" $ ) | quote }}
            description: Request movies & series
            widget:
                type: jellyseerr
                url: {{ include "homeserver.common.utils.serviceUrl" ( dict "service" .Values.services.jellyseerr "context" $ ) | quote }}
                key: "{{`{{HOMEPAGE_VAR_JELLYSEERR_API_KEY}}`}}"
      {{- end }}
      {{- if .Values.services.plex.enabled }}
      - Plex:
            icon: sh-plex
            href: {{ include "homeserver.common.utils.ingressUrl" ( dict "service" .Values.services.plex "context" $ ) | quote }}
            siteMonitor: {{ include "homeserver.common.utils.serviceUrl" ( dict "service" .Values.services.plex "context" $ ) | quote }}
            description: Media server
            widget:
                type: tautulli
                url: {{ include "homeserver.common.utils.serviceUrl" ( dict "service" .Values.services.tautulli "context" $ ) | quote }}
                key: "{{`{{HOMEPAGE_VAR_TAUTULLI_API_KEY}}`}}"
                enableUser: true
                showEpisodeNumber: true
                expandOneStreamToTwoRows: false
      {{- end }}
      {{- $jellyfinServices := list }}
      {{- if kindIs "slice" .Values.services.jellyfin }}
        {{- $jellyfinServices = .Values.services.jellyfin }}
      {{- else }}
        {{- $jellyfinServices = list .Values.services.jellyfin }}
      {{- end }}
      {{- range $index, $service := $jellyfinServices }}
      {{- if $service.enabled }}
      - Jellyfin {{ $index }}:
            icon: sh-jellyfin
            href: {{ include "homeserver.common.utils.ingressUrl" ( dict "service" $service "context" $ ) | quote }}
            siteMonitor: {{ include "homeserver.common.utils.serviceUrl" ( dict "service" $service "context" $ ) | quote }}
            description: Media server
            widget:
                type: jellyfin
                url: {{ include "homeserver.common.utils.serviceUrl" ( dict "service" $service "context" $ ) | quote }}
                key: "{{`{{HOMEPAGE_VAR_JELLYFIN_API_KEY_`}}{{ $index }}{{`}}`}}"
                enableBlocks: true
                enableNowPlaying: true
                enableUser: false
                showEpisodeNumber: true
                expandOneStreamToTwoRows: false
      {{- end }}
      {{- end }}
      {{- if .Values.services.stash.enabled }}
      - Stash:
            icon: sh-stash
            href: {{ include "homeserver.common.utils.ingressUrl" ( dict "service" .Values.services.stash "context" $ ) | quote }}
            siteMonitor: {{ include "homeserver.common.utils.serviceUrl" ( dict "service" .Values.services.stash "context" $ ) | quote }}
            description: Stash
            widget:
              type: stash
              url: {{ include "homeserver.common.utils.serviceUrl" ( dict "service" .Values.services.stash "context" $ ) | quote }}
              fields: ["scenes", "sceneDuration"]
      {{- end }}
{{- end }}
{{- if (or .Values.services.calibre.enabled .Values.services.kavita.enabled .Values.services.calibrebookdownloader.enabled .Values.services.openbooks.enabled) }}
- Books:
      {{- if .Values.services.calibre.enabled }}
      - Calibre:
            icon: sh-calibre
            href: {{ include "homeserver.common.utils.ingressUrl" ( dict "service" .Values.services.calibre "context" $ ) | quote }}
            siteMonitor: {{ include "homeserver.common.utils.serviceUrl" ( dict "service" .Values.services.calibre "context" $ ) | quote }}
            description: Book library
            widget:
                type: calibreweb
                url: {{ include "homeserver.common.utils.serviceUrl" ( dict "service" .Values.services.calibre "context" $ ) | quote }}
                username: "{{`{{HOMEPAGE_VAR_CALIBRE_USERNAME}}`}}"
                password: "{{`{{HOMEPAGE_VAR_CALIBRE_PASSWORD}}`}}"
                fields: ["books", "authors", "series"]
      {{- end }}
      {{- if .Values.services.kavita.enabled }}
      - Kavita:
            icon: sh-kavita
            href: {{ include "homeserver.common.utils.ingressUrl" ( dict "service" .Values.services.kavita "context" $ ) | quote }}
            siteMonitor: {{ include "homeserver.common.utils.serviceUrl" ( dict "service" .Values.services.kavita "context" $ ) | quote }}
            description: Book reader
            widget:
                type: kavita
                url: {{ include "homeserver.common.utils.serviceUrl" ( dict "service" .Values.services.kavita "context" $ ) | quote }}
                username: "{{`{{HOMEPAGE_VAR_KAVITA_USERNAME}}`}}"
                password: "{{`{{HOMEPAGE_VAR_KAVITA_PASSWORD}}`}}"
      {{- end }}
      {{- if .Values.services.calibrebookdownloader.enabled }}
      - "Anna's Archive":
            icon: sh-calibre-web
            href: {{ include "homeserver.common.utils.ingressUrl" ( dict "service" .Values.services.calibrebookdownloader "context" $ ) | quote }}
            siteMonitor: {{ include "homeserver.common.utils.serviceUrl" ( dict "service" .Values.services.calibrebookdownloader "context" $ ) | quote }}
            description: Download books from Anna's Archive
      {{- end }}
      {{- if .Values.services.openbooks.enabled }}
      - "IRCHighWay":
            icon: sh-openbooks
            href: {{ include "homeserver.common.utils.ingressUrl" ( dict "service" .Values.services.openbooks "context" $ ) | quote }}
            siteMonitor: {{ include "homeserver.common.utils.serviceUrl" ( dict "service" .Values.services.openbooks "context" $ ) | quote }}
            description: Download books from IRCHighWay
      {{- end }}
{{- end }}
{{- if (or .Values.services.librechat.enabled .Values.services.miniflux.enabled .Values.services.thelounge.enabled .Values.services.mealie.enabled .Values.services.convertx.enabled .Values.services.opengist.enabled .Values.services.stirlingpdf.enabled .Values.services.huginn.enabled .Values.services.changedetectionio.enabled .Values.services.archivebox.enabled .Values.services.apprise.enabled .Values.services.gotify.enabled) }}
- Utilities:
      {{- if .Values.services.librechat.enabled }}
      - Librechat:
            icon: sh-librechat
            href: {{ include "homeserver.common.utils.ingressUrl" ( dict "service" .Values.services.librechat "context" $ ) | quote }}
            siteMonitor: {{ include "homeserver.common.utils.serviceUrl" ( dict "service" .Values.services.librechat "context" $ ) | quote }}
            description: Chat with AI
      {{- end }}
      {{- if .Values.services.miniflux.enabled }}
      - RSS:
            icon: sh-miniflux-light
            href: {{ include "homeserver.common.utils.ingressUrl" ( dict "service" .Values.services.miniflux "context" $ ) | quote }}
            siteMonitor: {{ include "homeserver.common.utils.serviceUrl" ( dict "service" .Values.services.miniflux "context" $ ) | quote }}
            description: Feed reader
            widget:
                type: miniflux
                url: {{ include "homeserver.common.utils.serviceUrl" ( dict "service" .Values.services.miniflux "context" $ ) | quote }}
                fields: ["unread"]
                key: "{{`{{HOMEPAGE_VAR_MINIFLUX_API_KEY}}`}}"
      {{- end }}
      {{- if .Values.services.thelounge.enabled }}
      - The Lounge:
            icon: sh-the-lounge
            href: {{ include "homeserver.common.utils.ingressUrl" ( dict "service" .Values.services.thelounge "context" $ ) | quote }}
            siteMonitor: {{ include "homeserver.common.utils.serviceUrl" ( dict "service" .Values.services.thelounge "context" $ ) | quote }}
            description: IRC client
      {{- end }}
      {{- if .Values.services.mealie.enabled }}
      - Mealie:
            icon: sh-mealie
            href: {{ include "homeserver.common.utils.ingressUrl" ( dict "service" .Values.services.mealie "context" $ ) | quote }}
            siteMonitor: {{ include "homeserver.common.utils.serviceUrl" ( dict "service" .Values.services.mealie "context" $ ) | quote }}
            description: Recipe manager
            widget:
                type: mealie
                url: {{ include "homeserver.common.utils.serviceUrl" ( dict "service" .Values.services.mealie "context" $ ) | quote }}
                key: "{{`{{HOMEPAGE_VAR_MEALIE_API_KEY}}`}}"
                version: 2
      {{- end }}
      {{- if .Values.services.convertx.enabled }}
      - Convertx:
            icon: sh-convertx
            href: {{ include "homeserver.common.utils.ingressUrl" ( dict "service" .Values.services.convertx "context" $ ) | quote }}
            siteMonitor: {{ include "homeserver.common.utils.serviceUrl" ( dict "service" .Values.services.convertx "context" $ ) | quote }}
            description: File conversion
      {{- end }}
      {{- if .Values.services.opengist.enabled }}
      - Opengist:
            icon: sh-opengist
            href: {{ include "homeserver.common.utils.ingressUrl" ( dict "service" .Values.services.opengist "context" $ ) | quote }}
            siteMonitor: {{ include "homeserver.common.utils.serviceUrl" ( dict "service" .Values.services.opengist "context" $ ) | quote }}
            description: Gists
      {{- end }}
      {{- if .Values.services.stirlingpdf.enabled }}
      - Stirling PDF:
            icon: sh-stirling-pdf
            href: {{ include "homeserver.common.utils.ingressUrl" ( dict "service" .Values.services.stirlingpdf "context" $ ) | quote }}
            siteMonitor: {{ include "homeserver.common.utils.serviceUrl" ( dict "service" .Values.services.stirlingpdf "context" $ ) | quote }}
            description: PDF Manipulation
      {{- end }}
      {{- if .Values.services.huginn.enabled }}
      - Huginn:
            icon: sh-huginn
            href: {{ include "homeserver.common.utils.ingressUrl" ( dict "service" .Values.services.huginn "context" $ ) | quote }}
            siteMonitor: {{ include "homeserver.common.utils.serviceUrl" ( dict "service" .Values.services.huginn "context" $ ) | quote }}
            description: Monitors the world and acts on your behalf
      {{- end }}
      {{- if .Values.services.changedetectionio.enabled }}
      - Changedetection:
            icon: sh-changedetection
            href: {{ include "homeserver.common.utils.ingressUrl" ( dict "service" .Values.services.changedetectionio "context" $ ) | quote }}
            siteMonitor: {{ include "homeserver.common.utils.serviceUrl" ( dict "service" .Values.services.changedetectionio "context" $ ) | quote }}
            description: Website change detection
            widget:
                type: changedetectionio
                url: {{ include "homeserver.common.utils.serviceUrl" ( dict "service" .Values.services.changedetectionio "context" $ ) | quote }}
                key: "{{`{{HOMEPAGE_VAR_CHANGEDETECTION_API_KEY}}`}}"
      {{- end }}
      {{- if .Values.services.archivebox.enabled }}
      - Archivebox:
            icon: sh-archivebox
            href: {{ include "homeserver.common.utils.ingressUrl" ( dict "service" .Values.services.archivebox "context" $ ) | quote }}
            siteMonitor: {{ include "homeserver.common.utils.serviceUrl" ( dict "service" .Values.services.archivebox "context" $ ) | quote }}
            description: Web archiving
      {{- end }}
      {{- if .Values.services.apprise.enabled }}
      - Apprise:
            icon: sh-apprise
            href: {{ include "homeserver.common.utils.ingressUrl" ( dict "service" .Values.services.apprise "context" $ ) | quote }}
            siteMonitor: {{ include "homeserver.common.utils.serviceUrl" ( dict "service" .Values.services.apprise "context" $ ) | quote }}
            description: Send notifications to any service
      {{- end }}
      {{- if .Values.services.gotify.enabled }}
      - Gotify:
            icon: sh-gotify
            href: {{ include "homeserver.common.utils.ingressUrl" ( dict "service" .Values.services.gotify "context" $ ) | quote }}
            siteMonitor: {{ include "homeserver.common.utils.serviceUrl" ( dict "service" .Values.services.gotify "context" $ ) | quote }}
            description: Push notifications
            widget:
                type: gotify
                url: {{ include "homeserver.common.utils.serviceUrl" ( dict "service" .Values.services.gotify "context" $ ) | quote }}
                key: "{{`{{HOMEPAGE_VAR_GOTIFY_API_KEY}}`}}"
      {{- end }}
{{- end }}
- Monitoring:
      {{- if .Values.services.myspeed.enabled }}
      - MySpeed:
            icon: sh-myspeed
            href: {{ include "homeserver.common.utils.ingressUrl" ( dict "service" .Values.services.myspeed "context" $ ) | quote }}
            siteMonitor: {{ include "homeserver.common.utils.serviceUrl" ( dict "service" .Values.services.myspeed "context" $ ) | quote }}
            description: Internet speed tracker
            widget:
                type: myspeed
                url: {{ include "homeserver.common.utils.serviceUrl" ( dict "service" .Values.services.myspeed "context" $ ) | quote }}
      {{- end }}
      {{- if .Values.monitoring.enabled }}
      - Grafana:
            icon: sh-grafana
            href: {{ printf "https://grafana.%s" .Values.ingress.domain | quote }}
            siteMonitor: {{ printf "http://grafana.%s.svc.cluster.local" (include "homeserver.monitoring.names.namespace" .) | quote }}
            description: Grafana
            widget:
                type: grafana
                url: {{ printf "http://grafana.%s.svc.cluster.local" (include "homeserver.monitoring.names.namespace" .) | quote }}
                username: "{{`{{HOMEPAGE_VAR_GRAFANA_USERNAME}}`}}"
                password: "{{`{{HOMEPAGE_VAR_GRAFANA_PASSWORD}}`}}"
      {{- end }}
      - Authentik:
            icon: sh-authentik
            href: {{ printf "https://authentik.%s" .Values.ingress.domain | quote }}
            siteMonitor: {{ printf "http://authentik-server.%s.svc.cluster.local" (include "homeserver.authentik.names.namespace" .) | quote }}
            description: SSO authentication
            widget:
                type: authentik
                url: {{ printf "http://authentik-server.%s.svc.cluster.local" (include "homeserver.authentik.names.namespace" .) | quote }}
                key: "{{`{{HOMEPAGE_VAR_AUTHENTIK_API_KEY}}`}}"
      {{- if .Values.services.backrest.enabled }}
      - Backrest:
            icon: sh-backrest-light
            href: {{ include "homeserver.common.utils.ingressUrl" ( dict "service" .Values.services.backrest "context" $ ) | quote }}
            siteMonitor: {{ include "homeserver.common.utils.serviceUrl" ( dict "service" .Values.services.backrest "context" $ ) | quote }}
            description: Backups management
      {{- end }}
